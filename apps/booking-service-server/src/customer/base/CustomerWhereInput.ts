/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { FlightBookingListRelationFilter } from "../../flightBooking/base/FlightBookingListRelationFilter";
import { HotelBookingListRelationFilter } from "../../hotelBooking/base/HotelBookingListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { TaxiBookingListRelationFilter } from "../../taxiBooking/base/TaxiBookingListRelationFilter";

@InputType()
class CustomerWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => FlightBookingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FlightBookingListRelationFilter)
  @IsOptional()
  @Field(() => FlightBookingListRelationFilter, {
    nullable: true,
  })
  flightBookings?: FlightBookingListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HotelBookingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HotelBookingListRelationFilter)
  @IsOptional()
  @Field(() => HotelBookingListRelationFilter, {
    nullable: true,
  })
  hotelBookings?: HotelBookingListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => TaxiBookingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TaxiBookingListRelationFilter)
  @IsOptional()
  @Field(() => TaxiBookingListRelationFilter, {
    nullable: true,
  })
  taxiBookings?: TaxiBookingListRelationFilter;
}

export { CustomerWhereInput as CustomerWhereInput };
