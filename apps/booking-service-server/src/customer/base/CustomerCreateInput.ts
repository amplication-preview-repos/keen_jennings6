/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { FlightBookingCreateNestedManyWithoutCustomersInput } from "./FlightBookingCreateNestedManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { HotelBookingCreateNestedManyWithoutCustomersInput } from "./HotelBookingCreateNestedManyWithoutCustomersInput";
import { TaxiBookingCreateNestedManyWithoutCustomersInput } from "./TaxiBookingCreateNestedManyWithoutCustomersInput";

@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: () => FlightBookingCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => FlightBookingCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => FlightBookingCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  flightBookings?: FlightBookingCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: () => HotelBookingCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => HotelBookingCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => HotelBookingCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  hotelBookings?: HotelBookingCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => TaxiBookingCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => TaxiBookingCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => TaxiBookingCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  taxiBookings?: TaxiBookingCreateNestedManyWithoutCustomersInput;
}

export { CustomerCreateInput as CustomerCreateInput };
