/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  HotelBooking as PrismaHotelBooking,
  Customer as PrismaCustomer,
} from "@prisma/client";

export class HotelBookingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.HotelBookingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.hotelBooking.count(args);
  }

  async hotelBookings<T extends Prisma.HotelBookingFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelBookingFindManyArgs>
  ): Promise<PrismaHotelBooking[]> {
    return this.prisma.hotelBooking.findMany<Prisma.HotelBookingFindManyArgs>(
      args
    );
  }
  async hotelBooking<T extends Prisma.HotelBookingFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelBookingFindUniqueArgs>
  ): Promise<PrismaHotelBooking | null> {
    return this.prisma.hotelBooking.findUnique(args);
  }
  async createHotelBooking<T extends Prisma.HotelBookingCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelBookingCreateArgs>
  ): Promise<PrismaHotelBooking> {
    return this.prisma.hotelBooking.create<T>(args);
  }
  async updateHotelBooking<T extends Prisma.HotelBookingUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelBookingUpdateArgs>
  ): Promise<PrismaHotelBooking> {
    return this.prisma.hotelBooking.update<T>(args);
  }
  async deleteHotelBooking<T extends Prisma.HotelBookingDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.HotelBookingDeleteArgs>
  ): Promise<PrismaHotelBooking> {
    return this.prisma.hotelBooking.delete(args);
  }

  async getCustomer(parentId: string): Promise<PrismaCustomer | null> {
    return this.prisma.hotelBooking
      .findUnique({
        where: { id: parentId },
      })
      .customer();
  }
}
